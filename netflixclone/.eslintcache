[{"c:\\Projetos\\netflixclone\\src\\index.js":"1","c:\\Projetos\\netflixclone\\src\\App.js":"2","c:\\Projetos\\netflixclone\\src\\Tmdb.js":"3","c:\\Projetos\\netflixclone\\src\\components\\movieRow.js":"4","c:\\Projetos\\netflixclone\\src\\components\\FeaturedMovie.js":"5","c:\\Projetos\\netflixclone\\src\\components\\header.js":"6","c:\\Projetos\\netflixclone\\src\\components\\Header.js":"7","C:\\Projetos\\netflixclone\\src\\index.js":"8","C:\\Projetos\\netflixclone\\src\\App.js":"9","C:\\Projetos\\netflixclone\\src\\Tmdb.js":"10","C:\\Projetos\\netflixclone\\src\\components\\movieRow.js":"11","C:\\Projetos\\netflixclone\\src\\components\\FeaturedMovie.js":"12","C:\\Projetos\\netflixclone\\src\\components\\Header.js":"13"},{"size":197,"mtime":1610292835278,"results":"14","hashOfConfig":"15"},{"size":2130,"mtime":1610337676913,"results":"16","hashOfConfig":"15"},{"size":2762,"mtime":1610301505209,"results":"17","hashOfConfig":"15"},{"size":1848,"mtime":1610336889950,"results":"18","hashOfConfig":"15"},{"size":1963,"mtime":1610338517938,"results":"19","hashOfConfig":"15"},{"size":319,"mtime":1610332417125,"results":"20","hashOfConfig":"15"},{"size":727,"mtime":1610333531742,"results":"21","hashOfConfig":"15"},{"size":197,"mtime":1610292835278,"results":"22","hashOfConfig":"23"},{"size":2130,"mtime":1610337676913,"results":"24","hashOfConfig":"23"},{"size":2762,"mtime":1610301505209,"results":"25","hashOfConfig":"23"},{"size":1848,"mtime":1610336889950,"results":"26","hashOfConfig":"23"},{"size":1963,"mtime":1610338517938,"results":"27","hashOfConfig":"23"},{"size":727,"mtime":1610333531742,"results":"28","hashOfConfig":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"jacw2m",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b3e9nm",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"c:\\Projetos\\netflixclone\\src\\index.js",[],["60","61"],"c:\\Projetos\\netflixclone\\src\\App.js",["62"],"c:\\Projetos\\netflixclone\\src\\Tmdb.js",["63"],"const API_KEY = '5766e34d7078ff538a495dc1b348a1d2';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/*\r\n  -Originais Netflix\r\n  -Recomendados\r\n  -em alta(top rated)\r\n  -ação\r\n  -comedia\r\n  -romance\r\n  -documentarios \r\n*/\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do NetFlix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n\r\n        ];\r\n    },\r\n\r\n    getMovieinfo: async (movieId, type) => {\r\n        let info ={};\r\n\r\n        if (movieId) {\r\n            switch(type) {\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                \r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","c:\\Projetos\\netflixclone\\src\\components\\movieRow.js",["64"],"import React, {useState} from 'react';\r\nimport './movieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\n\r\n\r\nexport default ({title, items}) => {\r\n    \r\n    const [scrollX, setscrollX] = useState(-400);\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth /2);\r\n        if (x > 0) {\r\n            x = 0;\r\n        };\r\n        setscrollX(x);\r\n    };\r\n    \r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth /2);\r\n        \r\n        let listW = items.results.length * 150;\r\n        if ((window.innerWidth - listW) > x) {\r\n            x = (window.innerWidth - listW) - 60; \r\n        }\r\n        setscrollX(x); \r\n    };\r\n\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2> \r\n\r\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize: 50}} />\r\n            </div>\r\n\r\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize: 50}} />\r\n            </div>\r\n\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length*150\r\n                }}>\r\n                    {items.results.length > 0 && items.results.map((item, key) => (\r\n                        <div key={key} className=\"movieRow--item\">\r\n                             <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>    \r\n                    ))}    \r\n                </div>    \r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}","c:\\Projetos\\netflixclone\\src\\components\\FeaturedMovie.js",["65"],"import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item}) => {\r\n    console.log(item);\r\n\r\n    let fisrtDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for (let i in item.genres) {\r\n        genres.push( item.genres[i].name );\r\n    }\r\n\r\n    let description = item.overview;\r\n    if (description.length > 200) {\r\n        description = description.substring(0,200) + ' ...';\r\n    }\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <section className=\"featured\" style={{\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n            }}>\r\n                <div className=\"featured--vertical\">\r\n                    <div className=\"featured--horizontal\">\r\n                        <div className=\"featured--name\">{item.original_name}</div>\r\n                        <div className=\"featured--info\">\r\n                            <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                            <div className=\"featured--years\">{fisrtDate.getFullYear()}</div>\r\n                            <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                        </div>\r\n                        <div className=\"featured--description\">{item.overview}</div>\r\n                        <div className=\"featured--buttons\">\r\n                            <a href={`/watch/$(item.id)`} className=\"featured--watchbutton\"> Assistir</a>\r\n                            <a href={`/list/add/$(item.id)`} className=\"featured--mylistbutton\">+ Minha lista</a>\r\n                        </div>\r\n                        <div className=\"featured--genres\"><strong>Gêneros: </strong>{genres.join(', ')}</div>\r\n                    </div>\r\n                </div>    \r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","c:\\Projetos\\netflixclone\\src\\components\\header.js",["66"],"c:\\Projetos\\netflixclone\\src\\components\\Header.js",["67"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://pro2-bar-s3-cdn-cf2.myportfolio.com/dddb0c1b4ab622854dd81280840458d3/351efdd5c9879db23df33bde.png?h=5b77d69fb762d7c92c00abe353376534\" alt=\"Usuário\" />\r\n                </a>\r\n            </div>\r\n        </header>    \r\n    )\r\n}","C:\\Projetos\\netflixclone\\src\\index.js",[],"C:\\Projetos\\netflixclone\\src\\App.js",["68"],"C:\\Projetos\\netflixclone\\src\\Tmdb.js",["69"],"C:\\Projetos\\netflixclone\\src\\components\\movieRow.js",["70"],"C:\\Projetos\\netflixclone\\src\\components\\FeaturedMovie.js",["71"],"C:\\Projetos\\netflixclone\\src\\components\\Header.js",["72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":9,"column":1,"nodeType":"79","endLine":80,"endColumn":2},{"ruleId":"77","severity":1,"message":"80","line":20,"column":1,"nodeType":"79","endLine":87,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":8,"column":1,"nodeType":"79","endLine":56,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":4,"column":1,"nodeType":"79","endLine":45,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":4,"column":1,"nodeType":"79","endLine":10,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":4,"column":1,"nodeType":"79","endLine":19,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":9,"column":1,"nodeType":"79","endLine":80,"endColumn":2},{"ruleId":"77","severity":1,"message":"80","line":20,"column":1,"nodeType":"79","endLine":87,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":8,"column":1,"nodeType":"79","endLine":56,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":4,"column":1,"nodeType":"79","endLine":45,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":4,"column":1,"nodeType":"79","endLine":19,"endColumn":2},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]